name: "Init container for k8s operator"

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag of the agent'     
        required: true
      init_image_tag:
        description: 'Image tag'  
        required: true
        default: "0"



jobs:  
  set_image_tag_variable:
    strategy:
      matrix:
        agents: [
          {file: "agent.zip", platform: "linux"},
          {file: "agent-alpine.zip", platform: "alpine"}
        ]
    runs-on: ubuntu-latest
    name: Build and push Docker image
    steps:
    - name: Set release tag
      shell: bash
      run: |
          echo "::set-output name=TAG_NAME::$(echo ${{ inputs.release_tag }} | sed -E 's/^([0-9]*\.[0-9]*\.[0-9]*).*/\1/')-init.${{ inputs.init_image_tag }}"
      id: set_tag

    - uses: actions/checkout@v3


    - name: Login to DockerHub
      if: ${{ success() }}
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_PASS }}
    

    - name: Configure AWS credentials for artifacts bucket
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.RELEASE_ARTIFACTS_MANAGER_KEY }}
        aws-secret-access-key: ${{ secrets.RELEASE_ARTIFACTS_MANAGER_SECRET }}
        aws-region: us-east-1

    - name: Download agent artifacts
      run: |
        aws s3 cp s3://${{ secrets.RELEASE_ARTIFACTS_BUCKET }}/artifacts/${{ inputs.release_tag }}/${{ matrix.agents.file }} ./lightrun-init-agent/


    - name: Build and push ${{ matrix.agents.platform }} container
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./lightrun-init-agent/Dockerfile
        push: true
        tags: "lightruncom/k8s-operator-init-java-agent-${{ matrix.agents.platform }}:${{steps.set_tag.outputs.TAG_NAME}}"
        build-args: |
          FILE=${{ matrix.agents.file }}


    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2.2.0
      env:
        SLACK_CHANNEL: devops-alerts
        SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
        SLACK_MESSAGE: 'Tag ${{ inputs.release_tag }} | Platform ${{ matrix.agents.platform }}'
        SLACK_TITLE: Init contianer build status - ${{ job.status }}
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
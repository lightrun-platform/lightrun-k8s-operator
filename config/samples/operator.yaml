apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: lightrun-k8s-operator
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: lightrunjavaagents.agents.lightrun.com
spec:
  group: agents.lightrun.com
  names:
    kind: LightrunJavaAgent
    listKind: LightrunJavaAgentList
    plural: lightrunjavaagents
    shortNames:
    - lrja
    singular: lightrunjavaagent
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Deployment name
      jsonPath: .spec.deploymentName
      name: Deployment
      type: string
    - description: Status of Deployment Reconciliation
      jsonPath: .status.deploymentStatus
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta
    schema:
      openAPIV3Schema:
        description: LightrunJavaAgent is the Schema for the lightrunjavaagents API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LightrunJavaAgentSpec defines the desired state of LightrunJavaAgent
            properties:
              agentCliFlags:
                description: Add cli flags to the agent "-agentpath:/lightrun/agent/lightrun_agent.so=<AgentCliFlags>"
                  https://docs.lightrun.com/jvm/agent-configuration/#additional-command-line-flags
                type: string
              agentConfig:
                additionalProperties:
                  type: string
                description: Agent configuration to be changed from default values
                  https://docs.lightrun.com/jvm/agent-configuration/#setting-agent-properties-from-the-agentconfig-file
                type: object
              agentEnvVarName:
                description: Env variable that will be patched with the -agentpath
                  Common choice is JAVA_TOOL_OPTIONS Depending on the tool used it
                  may vary from JAVA_OPTS to MAVEN_OPTS and CATALINA_OPTS More info
                  can be found here https://docs.lightrun.com/jvm/build-tools/
                type: string
              agentName:
                description: Agent name for registration to the server
                type: string
              agentTags:
                description: Agent tags that will be shown in the portal / IDE plugin
                items:
                  type: string
                type: array
              containerSelector:
                description: List of containers that should be patched in the Pod
                items:
                  type: string
                type: array
              deploymentName:
                description: Name of the Deployment that will be patched
                type: string
              initContainer:
                properties:
                  image:
                    description: Image of the init container. Image name and tag will
                      define platform and version of the agent
                    type: string
                  sharedVolumeMountPath:
                    description: Path in the app container where volume with agent
                      will be mounted
                    type: string
                  sharedVolumeName:
                    description: Name of the volume that will be added to pod
                    type: string
                required:
                - image
                - sharedVolumeMountPath
                - sharedVolumeName
                type: object
              secretName:
                description: Name of the Secret in the same namespace contains lightrun
                  key and conmpany id
                type: string
              serverHostname:
                description: Lightrun server hostname that will be used for downloading
                  an agent Key and company id in the secret has to be taken from this
                  server as well
                type: string
            required:
            - agentEnvVarName
            - agentTags
            - containerSelector
            - deploymentName
            - initContainer
            - secretName
            - serverHostname
            type: object
          status:
            description: LightrunJavaAgentStatus defines the observed state of LightrunJavaAgent
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              deploymentStatus:
                type: string
              lastScheduleTime:
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: lightrun-k8s-operator-controller-manager
  namespace: lightrun-k8s-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: lightrun-k8s-operator-leader-election-role
  namespace: lightrun-k8s-operator
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: lightrun-k8s-operator-manager-role
rules:
- apiGroups:
  - agents.lightrun.com
  resources:
  - lightrunjavaagents
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - agents.lightrun.com
  resources:
  - lightrunjavaagents/finalizers
  verbs:
  - update
- apiGroups:
  - agents.lightrun.com
  resources:
  - lightrunjavaagents/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: lightrun-k8s-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: lightrun-k8s-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: lightrun-k8s-operator-leader-election-rolebinding
  namespace: lightrun-k8s-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: lightrun-k8s-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: lightrun-k8s-operator-controller-manager
  namespace: lightrun-k8s-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: lightrun-k8s-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: lightrun-k8s-operator-manager-role
subjects:
- kind: ServiceAccount
  name: lightrun-k8s-operator-controller-manager
  namespace: lightrun-k8s-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: lightrun-k8s-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: lightrun-k8s-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: lightrun-k8s-operator-controller-manager
  namespace: lightrun-k8s-operator
---
apiVersion: v1
data:
  controller_manager_config.yaml: "apiVersion: controller-runtime.sigs.k8s.io/v1alpha1\nkind:
    ControllerManagerConfig\nhealth:\n  healthProbeBindAddress: :8081\nmetrics:\n
    \ bindAddress: 127.0.0.1:8080\nwebhook:\n  port: 9443\nleaderElection:\n  leaderElect:
    true\n  resourceName: 5b425f09.lightrun.com\n#   leaderElectionReleaseOnCancel
    defines if the leader should step down volume \n#   when the Manager ends. This
    requires the binary to immediately end when the\n#   Manager is stopped, otherwise,
    this setting is unsafe. Setting this significantly\n#   speeds up voluntary leader
    transitions as the new leader don't have to wait\n#   LeaseDuration time first.\n#
    \  In the default scaffold provided, the program ends immediately after \n#   the
    manager stops, so would be fine to enable this option. However, \n#   if you are
    doing or is intended to do any operation such as perform cleanups \n#   after
    the manager stops then its usage might be unsafe.\n#   leaderElectionReleaseOnCancel:
    true\n"
kind: ConfigMap
metadata:
  name: lightrun-k8s-operator-manager-config
  namespace: lightrun-k8s-operator
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: lightrun-k8s-operator-controller-manager-metrics-service
  namespace: lightrun-k8s-operator
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: lightrun-k8s-operator-controller-manager
  namespace: lightrun-k8s-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.11.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        - --zap-log-level=0
        command:
        - /manager
        env:
        - name: WATCH_NAMESPACE
          value: ""
        image: lightruncom/lightrun-k8s-operator:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: lightrun-k8s-operator-controller-manager
      terminationGracePeriodSeconds: 10
